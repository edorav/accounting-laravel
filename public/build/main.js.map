{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/cost/cost-detail/cost-detail.component.css","webpack:///./src/app/cost/cost-detail/cost-detail.component.html","webpack:///./src/app/cost/cost-detail/cost-detail.component.ts","webpack:///./src/app/cost/cost.component.css","webpack:///./src/app/cost/cost.component.html","webpack:///./src/app/cost/cost.component.ts","webpack:///./src/app/cost/cost.service.ts","webpack:///./src/app/cost/cost.ts","webpack:///./src/app/cross/component/confirm/confirm.component.css","webpack:///./src/app/cross/component/confirm/confirm.component.html","webpack:///./src/app/cross/component/confirm/confirm.component.ts","webpack:///./src/app/cross/model/basic.bean.ts","webpack:///./src/app/cross/service/auth.guard.ts","webpack:///./src/app/cross/service/auth.service.ts","webpack:///./src/app/cross/service/myhttpclient.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/house/house-detail/house-detail.component.css","webpack:///./src/app/house/house-detail/house-detail.component.html","webpack:///./src/app/house/house-detail/house-detail.component.ts","webpack:///./src/app/house/house.component.css","webpack:///./src/app/house/house.component.html","webpack:///./src/app/house/house.component.ts","webpack:///./src/app/house/house.service.ts","webpack:///./src/app/house/house.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/profile/profile.component.css","webpack:///./src/app/user/profile/profile.component.html","webpack:///./src/app/user/profile/profile.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Navbar</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n      </li>\\n    </ul>\\n    <!--<form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"{{'common.search' | translate}}\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">{{'common.search' | translate}}</button>\\n    </form>-->\\n    <ul class=\\\"navbar-nav\\\">\\n      <li ngbDropdown class=\\\"nav-item dropdown\\\" placement=\\\"bottom-right\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" ngbDropdownToggle>\\n          <i class=\\\"fa fa-language\\\"></i>\\n        </a>\\n        <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"changeLang('it')\\\">Italiano</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"changeLang('en')\\\">Inglese</a>\\n        </div>\\n      </li>\\n      <li ngbDropdown class=\\\"nav-item dropdown\\\" placement=\\\"bottom-right\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" ngbDropdownToggle>\\n          <i class=\\\"fa fa-user\\\"></i>\\n        </a>\\n        <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/my-profile']\\\">Profilo</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '@app/cross/service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(\n    public translate: TranslateService,\n    public authService: AuthService,\n    private router: Router\n  ) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    translate.use('en');\n\n    const browserLang = translate.getBrowserLang();\n    // console.log(browserLang);\n  }\n\n  public changeLang(langCode: string): void {\n    this.translate.use(langCode);\n  }\n\n  public logout(): void {\n    this.authService.destroySession();\n    this.router.navigate(['login']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from '@app/app.component';\nimport { LoginComponent } from '@app/user/login/login.component';\nimport { ProfileComponent } from '@app/user/profile/profile.component';\nimport { DashboardComponent } from '@app/dashboard/dashboard.component';\nimport { HouseComponent } from '@app/house/house.component';\nimport { HouseDetailComponent } from '@app/house/house-detail/house-detail.component';\nimport { CostComponent } from '@app/cost/cost.component';\nimport { CostDetailComponent } from '@app/cost/cost-detail/cost-detail.component';\nimport { ConfirmComponent } from '@app/cross/component/confirm/confirm.component';\nimport { appRoutes } from '@app/app.routes';\nimport { SignupComponent } from '@app/user/signup/signup.component';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProfileComponent,\n    DashboardComponent,\n    HouseComponent,\n    HouseDetailComponent,\n    CostComponent,\n    CostDetailComponent,\n    ConfirmComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      appRoutes\n      // { enableTracing: true } // <-- debugging purposes only\n    ),\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: (createTranslateLoader),\n          deps: [HttpClient]\n      }\n  })\n  ],\n  entryComponents: [\n    ConfirmComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { HouseDetailComponent } from './house/house-detail/house-detail.component';\nimport { Routes } from '@angular/router';\nimport { AuthenticationGuard } from '@app/cross/service/auth.guard';\nimport { ProfileComponent } from '@app/user/profile/profile.component';\n\nexport const appRoutes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthenticationGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'house', component: HouseDetailComponent },\n  { path: 'house/:id', component: HouseDetailComponent },\n  { path: 'my-profile', component: ProfileComponent },\n  // { path: '**', component: PageNotFoundComponent }\n];\n","module.exports = \"\"","module.exports = \"<p>\\n  cost-detail works!\\n</p>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Cost } from '@app/cost/cost';\nimport { CostService } from '@app/cost/cost.service';\n\n@Component({\n  selector: 'app-cost-detail',\n  templateUrl: './cost-detail.component.html',\n  styleUrls: ['./cost-detail.component.css']\n})\nexport class CostDetailComponent implements OnInit {\n\n  @Input() houseId: string;\n  public model: Cost;\n  public costForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private _costService: CostService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    console.log(this.houseId);\n    this.model = new Cost();\n    this.initForm();\n  }\n\n  private initForm () {\n    this.costForm = new FormGroup({\n      name: new FormControl(this.model.name),\n      homeId: new FormControl(this.houseId)\n    });\n  }\n\n  public submit() {\n    this._costService.save(this.costForm.value, this.model.id).subscribe((cost: Cost) => {\n      this.model = cost;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" *ngIf=\\\"model\\\" (submit)=\\\"submit()\\\">\\n    <form [formGroup]=\\\"costForm\\\" >\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n                <label>costo</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"name\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n                <label>amount</label>\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"amount\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">&euro;</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n                <label>data</label>\\n                <div class=\\\"input-group\\\">\\n                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                        formControlName=\\\"date\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                            <i class=\\\"fa fa-calendar\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-md-2\\\">\\n                <label>&nbsp;</label>\\n                <button type=\\\"submit\\\" class=\\\"form-control btn btn-primary\\\">Add</button>\\n            </div>\\n        </div>\\n            \\n        \\n    </form>    \\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { Cost } from '@app/cost/cost';\nimport { CostService } from '@app/cost/cost.service';\n\n\n@Component({\n  selector: 'app-cost',\n  templateUrl: './cost.component.html',\n  styleUrls: ['./cost.component.css']\n})\nexport class CostComponent implements OnInit {\n  @Input() houseId: string;\n  @Output() addNewCost: EventEmitter<Cost> = new EventEmitter();\n  public model: Cost;\n  public costForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private _costService: CostService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.model = new Cost();\n    this.initForm();\n  }\n\n  private initForm () {\n    this.costForm = new FormGroup({\n      name: new FormControl(this.model.name),\n      amount: new FormControl(this.model.amount),\n      homeId: new FormControl(this.houseId),\n      date: new FormControl(this.model.date)\n    });\n  }\n\n  public submit() {\n    this.costForm.value.date = this.costForm.value.date.year + '/' + this.costForm.value.date.month + '/' + this.costForm.value.date.day;\n    this._costService.save(this.costForm.value, this.model.id).subscribe((cost: Cost) => {\n      this.addNewCost.emit(cost);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MyHttpClientService } from '@app/cross/service/myhttpclient.service';\nimport { AuthService } from '@app/cross/service/auth.service';\nimport { Cost } from '@app/cost/cost';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CostService extends MyHttpClientService<Cost> {\n\n  constructor(\n    httpClient: HttpClient,\n    authService: AuthService,\n    router: Router\n  ) {\n    super(httpClient,authService,router);\n  }\n\n  public getEndPoint(): string {\n    return 'cost';\n  }\n}\n","import { BasicBean } from \"@app/cross/model/basic.bean\";\n\n\nexport class Cost extends BasicBean {\n    name: string;\n    homeId: string;\n    amount: string;\n    date: Date;\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">Hi there!</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('cancel')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <p>Hello, name!</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"activeModal.close('confirm')\\\">Confirm</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close('cancel')\\\">Close</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.css']\n})\nexport class ConfirmComponent implements OnInit {\n\n  constructor(\n    public activeModal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","\n\nexport abstract class BasicBean {\n  id: string;\n  createdBy?: string;\n  updatedBy?: string;\n  createdAt: Date;\n  updatedAt: Date;\n\n  public constructor(json?: Object) {\n      if (json) {\n          this.assign(json);\n          this._fixDates();\n      }\n  }\n\n  public assign(json: Object) {\n      if (json) {\n          Object.assign(this, json);\n          this._fixDates();\n      }\n  }\n\n  public isNew() {\n      return !this.id;\n  }\n\n  private _fixDates() {\n      if (this.createdAt && typeof this.createdAt === \"string\") {\n          this.createdAt = new Date(this.createdAt);\n      }\n      if (this.updatedAt && typeof this.updatedAt === \"string\") {\n          this.updatedAt = new Date(this.updatedAt);\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { UserService } from '../../user/user.service';\nimport { ApiResponse } from '../model/apiresponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(\n      private _router: Router,\n      private _authService: AuthService,\n      private _userService: UserService\n  ) { }\n\n  canActivate(): boolean {\n    const token = this._authService.getToken();\n    if (token) {\n      this._userService.verifyToken().subscribe((response) => {\n        if (response) {\n          this._authService.setUser( JSON.stringify(response) );\n        } else {\n          this._authService.destroySession();\n          this._router.navigate(['/login']);\n          return false;\n        }\n      });\n      return true;\n    } else {\n      this._authService.destroySession();\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private USER_KEY = 'USER';\n  private TOKEN_KEY = 'TOKEN';\n\n  constructor() { }\n\n  public setUser( userData: string ) {\n    localStorage.setItem(this.USER_KEY, userData );\n  }\n\n  public setToken( tokenData: string ) {\n    localStorage.setItem(this.TOKEN_KEY, tokenData );\n  }\n\n  public getUser() {\n    return localStorage.getItem(this.USER_KEY);\n  }\n\n  public getTokenValue() {\n    return localStorage.getItem(this.TOKEN_KEY);\n  }\n\n  public destroySession() {\n    localStorage.clear();\n  }\n\n  public getToken() {\n    try {\n      const userObj = JSON.parse(this.getTokenValue());\n      return userObj.token;\n    } catch (err) {\n      return '';\n    }\n  }\n\n  public isLoggedIn() {\n    return this.getToken() === '' ? false : true;\n  }\n\n  public getField(field: string) {\n    try {\n      const userObj = JSON.parse(this.getUser());\n      return userObj.user[field];\n    } catch (err) {\n      return '';\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { config } from './../../../environments/environment';\nimport { AuthService } from './auth.service';\nimport { of, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\nexport abstract class MyHttpClientService<T> {\n  private absolutePath = config.serverUrl;\n\n  constructor(\n    public http: HttpClient,\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  public abstract getEndPoint();\n\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.authService.getToken()\n      })\n    };\n  }\n\n  public getEndPointUri(): string {\n    return this.absolutePath + this.getEndPoint() + '/';\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  public handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n\n      this.router.navigate(['network-error']);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  public get() {\n    const url = this.absolutePath + this.getEndPoint();\n    return this.http.get(url, this.getHttpOptions())\n      .pipe(\n        tap( // Log the result or error\n          data => data,\n          error => error\n        )\n      );\n  }\n\n  public findById(id: string) {\n    const url = this.absolutePath + this.getEndPoint();\n    return this.http.get(url + '/' + id, this.getHttpOptions())\n      .pipe(\n        tap( // Log the result or error\n          data => data,\n          error => error\n        )\n      );\n  }\n\n  public findByParentId(id: string) {\n    const url = this.absolutePath + this.getEndPoint();\n    return this.http.get(url + '/parent/' + id, this.getHttpOptions())\n      .pipe(\n        tap( // Log the result or error\n          data => data,\n          error => error\n        )\n      );\n  }\n\n  public save(model: T, id?: string) {\n    let url = this.absolutePath + this.getEndPoint();\n    if (id) {\n      url = url + '/' + id;\n    }\n    return this.http.post(url, model, this.getHttpOptions())\n      .pipe(\n        tap( // Log the result or error\n          data => data,\n          error => error\n        )\n      );\n  }\n\n  public delete(id: string) {\n    const url = this.absolutePath + this.getEndPoint() + '/' + id;\n\n    return this.http.delete(url, this.getHttpOptions())\n      .pipe(\n        tap( // Log the result or error\n          data => data,\n          error => error\n        )\n      );\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"houses\\\">\\n        <div class=\\\"col-md-3\\\" *ngFor=\\\"let house of houses\\\">\\n            <app-house\\n                [house]=\\\"house\\\"\\n            ></app-house>\\n        </div>\\n    </div>\\n</div>\\n\\n<a [routerLink]=\\\"['/house']\\\" class=\\\"btn btn-primary btn-add\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>\\n</a>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HouseService } from '../house/house.service';\nimport { House } from '../house/house';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  public houses: House[];\n\n  constructor(\n    private _houseService: HouseService\n  ) { }\n\n  ngOnInit() {\n    this.getHouses();\n  }\n\n  private getHouses(): void {\n    this._houseService.get().subscribe((houses: House[]) => {\n      this.houses = houses;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" *ngIf=\\\"model\\\">\\n    <form [formGroup]=\\\"houseForm\\\" (submit)=\\\"submit()\\\">\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"staticEmail\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n            <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"name\\\">\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </form>    \\n</div>\\n\\n<hr/>\\n<div class=\\\"container-fluid\\\">\\n    <h2>Lista dei costi</h2>\\n</div>\\n\\n<app-cost\\n    *ngIf=\\\"model\\\"\\n    [houseId]=\\\"model.id\\\"\\n    (addNewCost)=\\\"getCostList($event)\\\"\\n></app-cost>\\n\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"costList\\\">\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover table-sm\\\">\\n            <thead class=\\\"thead-light\\\">\\n                <tr>\\n                <th scope=\\\"col\\\">Costo</th>\\n                <th scope=\\\"col\\\">Importo</th>\\n                <th scope=\\\"col\\\">Data</th>\\n                <th scope=\\\"col\\\"></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let cost of costList\\\">\\n                    <td>{{cost.name}}</td>\\n                    <td>{{cost.amount}} &euro;</td>\\n                    <td>{{cost.date | date: 'd/M/yyyy' }}</td>\\n                    <td>\\n                        <button class=\\\"btn btn-default\\\"><i class=\\\"fa fa-pencil\\\"></i></button>\\n                        <button class=\\\"btn btn-danger ml-1\\\" (click)=deleteCost(cost.id)><i class=\\\"fa fa-trash\\\"></i></button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { CostService } from '@app/cost/cost.service';\nimport { Cost } from '@app/cost/cost';\nimport { House } from '@app/house/house';\nimport { HouseService } from '@app/house/house.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmComponent } from '@app/cross/component/confirm/confirm.component';\n\n@Component({\n  selector: 'app-house-detail',\n  templateUrl: './house-detail.component.html',\n  styleUrls: ['./house-detail.component.css']\n})\nexport class HouseDetailComponent implements OnInit {\n  public model: House;\n  public houseForm: FormGroup;\n  public costList: Cost[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private _houseService: HouseService,\n    private _costService: CostService,\n    private fb: FormBuilder,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params.id) {\n        this._houseService.findById(params.id).subscribe((house: House) => {\n          this.model = house;\n          this.getCostList();\n          this.initForm();\n        });\n      } else {\n        this.model = new House();\n        this.initForm();\n      }\n    });\n  }\n\n  public getCostList(): void {\n    this._costService.findByParentId(this.model.id).subscribe((costList: Cost[]) => {\n      this.costList = costList;\n    });\n  }\n\n  private initForm () {\n    this.houseForm = new FormGroup({\n      name: new FormControl(this.model.name),\n    });\n  }\n\n  public submit() {\n    this._houseService.save(this.houseForm.value, this.model.id).subscribe((house: House) => {\n      this.model = house;\n    });\n  }\n\n  public deleteCost(costId) {\n    this.modalService.open(ConfirmComponent).result.then((result) => {\n      if (result === 'confirm') {\n        this._costService.delete(costId).subscribe(() => {\n          this.getCostList();\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card my-2\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{house.name}}</h5>\\n    <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Card subtitle</h6>\\n    <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n    <a [routerLink]=\\\"['/house',house.id]\\\" class=\\\"card-link\\\">Detail</a>\\n    <a href=\\\"#\\\" class=\\\"card-link\\\">Another link</a>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { House } from '@app/house/house';\n\n\n@Component({\n  selector: 'app-house',\n  templateUrl: './house.component.html',\n  styleUrls: ['./house.component.css']\n})\nexport class HouseComponent implements OnInit {\n  @Input() house: House;\n\n  constructor() { }\n\n  ngOnInit() {\n    //console.log(this.house);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MyHttpClientService } from '@app/cross/service/myhttpclient.service';\nimport { House } from '@app/house/house';\nimport { AuthService } from '@app/cross/service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HouseService extends MyHttpClientService<House> {\n\n  constructor(\n    httpClient: HttpClient,\n    authService: AuthService,\n    router: Router\n  ) {\n    super(httpClient,authService,router);\n  }\n\n  public getEndPoint(): string {\n    return 'home';\n  }\n}\n","import { BasicBean } from \"@app/cross/model/basic.bean\";\n\n\nexport class House extends BasicBean {\n    name: string;\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container \\\">\\n  <div class=\\\"row align-items-center h-100\\\">\\n     <div class=\\\"col-d-4 my-auto mx-auto\\\">\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submit()\\\" >\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n              </div>\\n            <button class=\\\"btn btn-primary btn-block\\\">Login</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '@app/user/user.service';\nimport { User } from '@app/user/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public error: Boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  public submit(): void {\n    if (this.loginForm.valid) {\n      this._userService.login(this.loginForm.value.email , this.loginForm.value.password).subscribe((user: User[]) => {\n          if (user) {\n            this.router.navigate(['']);\n          } else {\n            this.error = true;\n          }\n      });\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" *ngIf=\\\"model\\\" >\\n  <form [formGroup]=\\\"myProfileForm\\\" (submit)=\\\"submit()\\\">\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label>Email</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label>Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign in</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { User } from '@app/user/user';\nimport { UserService } from '@app/user/user.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  public myProfileForm: FormGroup;\n  public model: User;\n\n  constructor(\n    public userService: UserService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.userService.verifyToken().subscribe((user: User) => {\n      this.model = user;\n      this.initForm();\n    });\n  }\n\n  public submit(): void {\n    this.userService.save(this.myProfileForm.value, this.model.id).subscribe((user: User) => {\n      this.model = user;\n    });\n  }\n\n  private initForm () {\n    this.myProfileForm = new FormGroup({\n      name: new FormControl(this.model.name),\n      email: new FormControl(this.model.email)\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  signup works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@app/cross/service/auth.service';\nimport { MyHttpClientService } from '@app/cross/service/myhttpclient.service';\nimport { User } from '@app/user/user';\nimport { ApiResponse } from '@app/cross/model/apiresponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends MyHttpClientService<User> {\n\n  constructor(\n    http: HttpClient,\n    authService: AuthService,\n    router: Router\n  ) {\n    super(http, authService, router);\n  }\n\n  public getEndPoint(): string {\n    return 'user';\n  }\n\n  public verifyToken(): Observable<User> {\n    return this.http.post(this.getEndPointUri() + 'verifyToken', {} , this.getHttpOptions()).pipe(map((res: User) => {\n        return res;\n    }));\n  }\n\n  /** GET heroes from the server */\n  public login ( email: String, password: String): Observable<User[]> {\n\n    return this.http.post<User[]>(this.getEndPointUri() + 'login', {email , password}, this.getHttpOptions())\n      .pipe(\n        tap(data => {\n          if (data) {\n            this.authService.setToken( JSON.stringify(data) );\n          }\n        }),\n        catchError(this.handleError('userLogin', []))\n      );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\nexport const config = {\n  serverUrl : 'http://localhost:8000/api/',\n  version: '1.0'\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}